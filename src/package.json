{
	"name": "umajin-lang",
	"displayName": "Umajin Language",
	"description": "Provide Umajin language support for Visual Studio Code.",
	"version": "1.3.4",
	"license": "MIT",
	"publisher": "umajin-kuzmashapran",
	"private": false,
	"author": {
		"name": "Umajin",
		"url": "https://umajin.com"
	},
	"contributors": [
		{
			"name": "Adam Harte",
			"email": "adam@adamharte.com",
			"url": "http://adamharte.com"
		},
		{
			"name": "James Fleming",
			"email": "jaemz@alum.mit.edu"
		},
		{
			"name": "Kuzma Shapran",
			"email": "kuzma.shapran@umajin.com"
		}
	],
	"categories": [
		"Programming Languages",
		"Debuggers"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/Umajin/vscode-umajin-lang.git"
	},
	"bug": {
		"url": "https://github.com/Umajin/vscode-umajin-lang/issues"
	},
	"homepage": "https://github.com/Umajin/vscode-umajin-lang",
	"icon": "images/umajin-logo.png",
	"galleryBanner": {
		"color": "#23323d",
		"theme": "dark"
	},
	"keywords": [
		"multi-root ready"
	],
	"activationEvents": [
		"workspaceContains:**/umajin"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"title": "Generate Umajin Standard Library",
				"command": "umajin.generateStdLib"
			},
			{
				"title": "Generate Umajin VSCode Workspace file",
				"command": "umajin.generateWorkspace"
			},
			{
				"title": "Apply all code actions in Umajin project",
				"command": "umajin.applyAllCodeActions"
			},
			{
				"title": "Stop Umajin Language Client",
				"command": "umajin.stopLanguageClient"
			},
			{
				"title": "Start Umajin Language Client",
				"command": "umajin.startLanguageClient"
			},
			{
				"title": "Report the status of Umajin Language Client",
				"command": "umajin.statusLanguageClient"
			},
			{
				"title": "Open Umajin engine documentation",
				"command": "umajin.openEngineHelp"
			},
			{
				"title": "Run",
				"command": "umajin.run",
				"icon": "$(play)"
			}
		],
		"breakpoints": [
			{
				"language": "umajin"
			}
		],
		"configuration": {
			"title": "Umajin",
			"properties": {
				"umajin.advanced.languageServer.command": {
					"type": "string",
					"default": "",
					"description": "Command to use instead of the Umajin Language Server specified by 'umajin.path.languageServer'.",
					"scope": "window"
				},
				"umajin.advanced.languageServer.arguments": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "Arguments for Umajin Language Server",
					"scope": "window"
				},
				"umajin.collapseLongMessages": {
					"type": "boolean",
					"default": true,
					"description": "Collapse multiline compilation messages",
					"scope": "window"
				},
				"umajin.engineHelp.local.ignoreVersion": {
					"type": "boolean",
					"default": false,
					"description": "Ignore version mismatch between the Umajin Language Server and the local Umajin Engine documentation",
					"scope": "window"
				},
				"umajin.engineHelp.local.path": {
					"type": "string",
					"default": "engine_help",
					"description": "Path to local Umajin Engine documentation",
					"scope": "window"
				},
				"umajin.engineHelp.remote.server": {
					"type": "string",
					"default": "engine-help.ur.local",
					"description": "Server name for the Umajin Engine documentation links",
					"scope": "window"
				},
				"umajin.engineHelp.remote.secure": {
					"type": "boolean",
					"default": false,
					"description": "Use secure HTTP protocol for the Umajin Engine documentation links",
					"scope": "window"
				},
				"umajin.outputHighlighting": {
					"type": "array",
					"items": {
						"type": "object",
						"title": "Highlighting rule",
						"properties": {
							"match": {
								"type": "string",
								"default": "",
								"description": "The substring to search or the regular expression to match"
							},
							"asRegex": {
								"type": "boolean",
								"default": false,
								"description": "Treat the 'match' string as a regular expression"
							},
							"caseSensitive": {
								"type": "boolean",
								"default": true,
								"description": "Perform case sensitive search / match"
							},
							"invert": {
								"type": "boolean",
								"default": false,
								"description": "Invert the search / match result"
							},
							"applyTo": {
								"type": "string",
								"enum": [
									"sourceInfo",
									"logProducer",
									"logLevel",
									"message"
								],
								"default": "message",
								"description": "Portion of the log entry to apply the search / regex to",
								"enumDescriptions": [
									"Source info",
									"Log producer",
									"Log level",
									"Message"
								]
							},
							"action": {
								"type": "string",
								"enum": [
									"highlight",
									"remove"
								],
								"default": "highlight",
								"description": "The action to do if the string is found / matched",
								"enumDescriptions": [
									"Apply highlighting",
									"Remove"
								]
							},
							"foreground": {
								"type": "string",
								"default": "",
								"description": "Foreground color to mix in",
								"format": "color"
							},
							"background": {
								"type": "string",
								"default": "",
								"description": "Background color to mix in",
								"format": "color"
							},
							"bold": {
								"type": "string",
								"enum": [
									"keep",
									"on",
									"off"
								],
								"default": "keep",
								"description": "Bold (last matched rule wins)",
								"enumDescriptions": [
									"Do not modify",
									"Turn on",
									"Turn off"
								]
							},
							"italic": {
								"type": "string",
								"enum": [
									"keep",
									"on",
									"off"
								],
								"default": "keep",
								"description": "Italic (last matched rule wins)",
								"enumDescriptions": [
									"Do not modify",
									"Turn on",
									"Turn off"
								]
							}
						}
					},
					"default": [],
					"description": "Output highlighting rules",
					"scope": "window"
				},
				"umajin.path.compiler": {
					"type": "string",
					"default": ".",
					"description": "The path to Umajin Compiler executable (relative to a workspace)",
					"scope": "window"
				},
				"umajin.path.jitEngine": {
					"type": "string",
					"default": ".",
					"description": "The path to Umajin JIT engine executable (relative to a workspace)",
					"scope": "window"
				},
				"umajin.path.languageServer": {
					"type": "string",
					"default": ".",
					"description": "The path to Umajin Language Server executable (relative to a workspace)",
					"scope": "window"
				},
				"umajin.root": {
					"type": "string",
					"default": "start.u",
					"description": "The start file of the project",
					"scope": "window"
				},
				"umajin.simulate.compiler": {
					"type": "string",
					"default": "JIT",
					"enum": [
						"JIT",
						"AOT"
					],
					"description": "Compiler simulation",
					"enumDescriptions": [
						"Parse files as if in JIT",
						"Parse files as if in AOT"
					],
					"scope": "window"
				},
				"umajin.simulate.platform": {
					"type": "string",
					"default": "native",
					"enum": [
						"native",
						"win32",
						"osx",
						"ios",
						"android"
					],
					"description": "Platform simulation",
					"enumDescriptions": [
						"Parse files as if on native platform",
						"Parse files as if on Windows",
						"Parse files as if on OS X",
						"Parse files as if on iOS",
						"Parse files as if on Android"
					],
					"scope": "window"
				}
			}
		},
		"configurationDefaults": {
			"[umajin]": {
				"editor.bracketPairColorization.enabled": false
			}
		},
		"debuggers": [
			{
				"type": "umajin",
				"label": "Umajin launch",
				"runtime": "node",
				"languages": [
					"umajin"
				],
				"configurationAttributes": {
					"launch": {
						"properties": {
							"arguments": {
								"type": "array",
								"description": "Extra arguments",
								"default": [],
								"items": {
									"type": "string"
								}
							},
							"logFormatEngineSourceInfo": {
								"type": "boolean",
								"default": false,
								"description": "Add engine source info to log messages",
								"scope": "window"
							},
							"logFormatThread": {
								"type": "boolean",
								"default": false,
								"description": "Add thread id to log messages",
								"scope": "window"
							},
							"logFormatTimestamp": {
								"type": "string",
								"enum": [
									"milli",
									"milli_float",
									"micro",
									"world_clock"
								],
								"default": "milli",
								"description": "Timestamp format in log",
								"enumDescriptions": [
									"Millisecond",
									"Millisecond floating point",
									"Microsecond",
									"World clock"
								]
							},
							"logLevel": {
								"type": "string",
								"enum": [
									"critical",
									"error",
									"warning",
									"info",
									"debug",
									"verbose"
								],
								"default": "debug",
								"description": "Log level",
								"enumDescriptions": [
									"Critical",
									"Error",
									"Warning",
									"Info",
									"Debug",
									"Verbose"
								]
							},
							"overrideRootFile": {
								"type": "string",
								"default": "",
								"description": "The script file to launch",
								"scope": "window"
							}
						}
					},
					"attach": {
						"properties": {
							"logHost": {
								"type": "string",
								"default": "127.0.0.1",
								"description": "A host name for the log reader to connect to",
								"scope": "window"
							},
							"logPort": {
								"type": "number",
								"description": "A port number for the log reader to connect to",
								"scope": "window"
							},
							"logStream": {
								"type": "boolean",
								"description": "A flag describing whether the log output is streamed or packeted",
								"scope": "window"
							},
							"debugHost": {
								"type": "string",
								"default": "127.0.0.1",
								"description": "A host name for the log reader to connect to",
								"scope": "window"
							},
							"debugPort": {
								"type": "number",
								"description": "A port number for the debugger to connect to",
								"scope": "window"
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"type": "umajin",
						"request": "launch",
						"name": "Umajin: Run"
					}
				],
				"configurationSnippets": [
					{
						"label": "Umajin: Run",
						"description": "A new configuration for launching Umajin.",
						"body": {
							"type": "umajin",
							"request": "launch",
							"name": "Umajin: Run"
						}
					},
					{
						"label": "Umajin: Attach",
						"description": "A new configuration for attaching to a running Umajin.",
						"body": {
							"type": "umajin",
							"request": "attach",
							"logPort": 47223,
							"debugPort": 21828,
							"name": "Umajin: Attach"
						}
					}
				]
			}
		],
		"grammars": [
			{
				"language": "umajin",
				"scopeName": "source.umajin",
				"path": "./syntaxes/umajin.tmLanguage.json"
			}
		],
		"languages": [
			{
				"id": "umajin",
				"aliases": [
					"Umajin",
					"umajin"
				],
				"extensions": [
					".u"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"semanticTokenModifiers": [
			{
				"id": "block",
				"description": "A block comment"
			},
			{
				"id": "line",
				"description": "A single line comment"
			},
			{
				"id": "floatingPoint",
				"description": "A floating point number"
			},
			{
				"id": "integralBinary",
				"description": "A binary integral number"
			},
			{
				"id": "integralOctal",
				"description": "An octal integral number"
			},
			{
				"id": "integralDecimal",
				"description": "A decimal integral number"
			},
			{
				"id": "integralHexadecimal",
				"description": "A hexadecimal integral number"
			},
			{
				"id": "single",
				"description": "A string enclosed in apostrophies"
			},
			{
				"id": "double",
				"description": "A string enclosed in quotation marks"
			},
			{
				"id": "backtick",
				"description": "A string enclosed in backticks"
			},
			{
				"id": "primitive",
				"description": "A primitive type"
			},
			{
				"id": "utility",
				"description": "A utility type"
			},
			{
				"id": "local",
				"description": "A local variable"
			},
			{
				"id": "global",
				"description": "A global variable"
			}
		],
		"semanticTokenScopes": [
			{
				"language": "umajin",
				"scopes": {
					"comment.block": [
						"comment.block"
					],
					"comment.line": [
						"comment.line.double-slash"
					],
					"constant.defaultLibrary": [
						"constant.language"
					],
					"number.floatingPoint": [
						"constant.numeric.floating-point"
					],
					"number.integralBinary": [
						"constant.numeric.binary"
					],
					"number.integralOctal": [
						"constant.numeric.octal"
					],
					"number.integralDecimal": [
						"constant.numeric.decimal"
					],
					"number.integralHexadecimal": [
						"constant.numeric.hexadecimal"
					],
					"constant": [
						"constant.other.user-defined"
					],
					"class": [
						"entity.name.type.class"
					],
					"function.declaration": [
						"entity.name.function"
					],
					"function.declaration.virtual": [
						"entity.name.function.virtual"
					],
					"keyword": [
						"keyword.control"
					],
					"operator": [
						"keyword.operator"
					],
					"string.single": [
						"string.quoted.single"
					],
					"string.double": [
						"string.quoted.double"
					],
					"string.backtick": [
						"string.quoted.other.backtick"
					],
					"disabled": [
						"meta.disabled"
					],
					"macro": [
						"meta.preprocessor"
					],
					"type.defaultLibrary.primitive": [
						"support.type.primitive"
					],
					"type.defaultLibrary.utility": [
						"support.type.utility"
					],
					"function": [
						"variable.function"
					],
					"function.virtual": [
						"variable.function.virtual"
					],
					"variable.local": [
						"variable.other.local"
					],
					"variable.global": [
						"variable.other.global"
					],
					"property": [
						"variable.other.property"
					],
					"parameter": [
						"variable.parameter"
					]
				}
			}
		],
		"semanticTokenTypes": [
			{
				"id": "disabled",
				"description": "Disabled code."
			}
		],
		"snippets": [
			{
				"language": "umajin",
				"path": "./snippets/umajin.json"
			},
			{
				"language": "json",
				"path": "./snippets/code-workspace.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run vscode-prepublish-esbuild",
		"vscode-prepublish-esbuild": "npm run esbuild-package -- --minify",
		"esbuild-package": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"vscode-prepublish-webpack": "npm run webpack-package",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"webpack-package": "webpack --mode production --devtool hidden-source-map",
		"vscode-prepublish-vanilla": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"lint": "eslint src --ext ts"
	},
	"engines": {
		"vscode": "^1.78.0"
	},
	"dependencies": {
		"@vscode/debugadapter": "^1.59.0",
		"vscode-languageclient": "^8.1.0"
	},
	"devDependencies": {
		"@types/node": "^18.16.12",
		"@types/vscode": "^1.78.0",
		"@typescript-eslint/eslint-plugin": "^5.59.6",
		"@typescript-eslint/parser": "^5.59.6",
		"@vscode/debugprotocol": "^1.59.0",
		"esbuild": "^0.17.19",
		"eslint": "^8.40.0",
		"path": "^0.12.7",
		"ts-loader": "^9.4.2",
		"typescript": "^5.0.4",
		"url": "^0.11.0",
		"webpack": "^5.82.1",
		"webpack-cli": "^5.1.1"
	}
}
